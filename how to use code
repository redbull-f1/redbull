# /home/harry/ros2_ws/src/redbull/dataset_ros2.py
내가 lidar bag파일을 db3형태로 우분투 22.04 ros2에서 정적 박스 데이터를 확보한게 있어 이걸 csv 파일로 바꿀건데 db3 파일에서 /scan만을 이용해서 csv 파일로 바꾸면 좋겠어 



# 기본 사용법
python3 /home/harry/ros2_ws/src/redbull/dataset_ros2.py --bag /home/harry/db3/static_box_5s.db3

# 출력 파일 지정
python3 /home/harry/ros2_ws/src/redbull/dataset_ros2.py --bag /home/harry/db3/static_box_5s.db3 --output /home/harry/db3/static_box_5s.csv

# 수동 검증 모드로 실행
python3 /home/harry/ros2_ws/src/redbull/dataset_ros2.py --bag /home/harry/db3/static_box_5s.db3 --manual-verify

python3 /home/harry/ros2_ws/src/redbull/dataset_ros2.py --bag /home/harry/db3/static_box_5s.db3 --manual-verify-all 

정적 데이터 시나리오 구성(장애물 크기,  개수 ..)	박종명

객체의 정확한 지점을 찍어서 그 친구로 yaw값 을 계산해야한다. 


/home/harry/db3/one_box1/one_box1.db3

python3 /home/harry/ros2_ws/src/redbull/dataset_ros2.py --bag /home/harry/db3/one_box1/one_box1.db3 --manual-verify-all 



val gt 만들어서 평가 
val dataset 만들때 trainset에 포함되었던 data랑 달라지게 따고 새로운 상황에서 ㅇㅇ 

정적으로 할 때 군집화된 정적 데이터의 중심점이 계속 바뀌니깐 그 점을 객체의 특정 점으로 박아둘 필요가 있다 그래서 글로벌로 쓴다
gt 데이터 딸 때 map에서 글로벌로 따자 

# merge_bags.py
ego 와 opp 차량의 라이다 데이터를 합치는 코드 

# parse_bag_ros2.py
라이다 bag 파일을 csv로 변환하는 코드

일반적인 데이터 처리:
python3 parse_bag_ros2.py /home/harry/Downloads/merged_dynamic3_ego_dynamic3_opp.db3/merged_dynamic3_ego_dynamic3_opp.db3_0.db3 --create_bag

특정 시간 구간 분석:
python3 parse_bag_ros2.py /home/harry/Downloads/merged_dynamic1_ego_dynamic1_opp.db3/merged_dynamic1_ego_dynamic1_opp.db3_0.db3 --start 10.0 --end 40.0 --create_bag

python3 parse_bag_ros2.py /home/harry/Downloads/merged_dynamic2_ego_dynamic2_opp.db3/merged_dynamic2_ego_dynamic2_opp.db3_0.db3 --start 20.0 --end 50.0 --create_bag

python3 parse_bag_ros2.py /home/harry/Downloads/merged_dynamic3_ego_dynamic3_opp.db3/merged_dynamic3_ego_dynamic3_opp.db3_0.db3 --start 10.0 --end 50.0 --create_bag

CSV만 필요한 경우:
python3 parse_bag_ros2.py your_bagfile.db3 --no-bag-output



